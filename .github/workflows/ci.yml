name: CI
on:
  pull_request:
    branches: [develop, main] # when PR is opened to develop
  push:
    # branches: [develop, main] # when PR is merged to develop

jobs:
  CodeQualityAndBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node, with NPM cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Check code formatting
        run: npm run format:check
      - name: Test
        run: npm run test -- --coverage
        env:
          CI: true
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage

      # Build
      - name: Build project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload build
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  DeployStaging:
    name: Deploy to staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: [CodeQualityAndBuild]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: "https://sargalias-tccawg2-staging.netlify.app/"
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Deploy
        run: |
          npx netlify-cli deploy \
            --site=${{ secrets.NETLIFY_SITE_ID }} \
            --auth=${{ secrets.NETLIFY_ACCESS_TOKEN }} \
            --dir="build" \
            --prod

  DeployProduction:
    name: Deploy to production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [CodeQualityAndBuild]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: "https://sargalias-tccawg2.netlify.app/"
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: ls
        run: ls -a
      - name: Deploy
        run: |
          npx netlify-cli deploy \
            --site=${{ secrets.NETLIFY_SITE_ID }} \
            --auth=${{ secrets.NETLIFY_ACCESS_TOKEN }} \
            --dir="build" \
            --prod
      - name: Zip assets
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage

  ReleaseGitHub:
    name: Release on GitHub
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [DeployProduction]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node, with NPM cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
